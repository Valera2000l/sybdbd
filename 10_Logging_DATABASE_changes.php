<meta name="viewport" content="width=device-width, initial-scale=1">

   <link rel="stylesheet" href="css/topic.css">

  <link rel="stylesheet" href="css/registration.css">
 <link href="https://fonts.googleapis.com/css?family=Roboto:400,700" rel="stylesheet">
 <link rel="shortcut icon" href="image/icon.png" type="image/x-icon"> 

   <title>Журнализация изменений БД</title>


 	<header>
		<?php 
    include('nav.php');
    include('reg.php');
    include('cont.php');
    include('user.php');
    ?> 
	</header>
 	<main  class="m">
  <div  id="back" ><a href="topic.php" >     &lArr; Назад</a></div>

 <div class="page" id="page">
  <p class="p" ><b>РАЗДЕЛ 2 ВНУТРЕННЯЯ ОРГАНИЗАЦИЯ РЕЛЯЦИОННЫХ СУБД</b>
  <p class="title">Тема 2.4 Журнализация изменений БД</p>

<p class="p">Одним из основных требований к развитым СУБД является надежность хранения баз данных. Это требование предполагает возможность восстановления согласованного состояния базы данных после любого программного или аппаратного сбоя. 
 <p class="p"><u> Типичная СУБД должна предоставлять такие функции восстановления, как:</u>
<ul>
<p class="q">1. <b> механизм резервного копирования</b>, предназначенный для периодического создания копий базы данных;
<p class="q">2.  <b>средства ведения журнала</b>, в котором фиксируются  текущее состояние транзакций и вносимые в базы данных изменения;
<p class="q">3.  <b>функция создания контрольных точек</b>, обеспечивающая перенос выполняемых в базе данных изменений во вторичную помять с целью сделать их постоянными;
<p class="q">4.  <b>менеджер восстановления</b>, обеспечивающий восстановление согласованного базы данных, нарушенного в результате отказа.
</ul>
<p class="p">Возможны следующие ситуации, при которых требуется производить восстановление состояния базы данных:
<ul>
<p class="q">1. <b><i> Индивидуальный откат транзакции</i></b>. Типичной ситуацией отката транзакции является ее завершением оператором ROLLBACK; откат транзакции может быть инициирован системой. Для восстановления согласованного состояния базы данных при индивидуальном откате транзакции нужно устранить последствия  операторов модификации базы данных, которые выполнялись в этой транзакции.
<p class="q">2. <b><i> Восстановление после внезапной потери содержимого оперативной памяти</i></b> (мягкий сбой). Возникновение ситуации в случае выключение электрического питания, при возникновении неустранимого сбоя процессора. Ситуация характеризуется потерей той части базы данных, которая к моменту сбоя содержалась в буферах оперативной памяти.
<p class="q">3.<b><i>  Восстановление после поломки основного внешнего носителя базы данных</i></b> (жесткий сбой). Эта ситуация в современных условиях при высокой надежности устройств внешней памяти может встретиться крайне редко, но все-таки СУБД должна быть в состоянии восстановить базу данных и в этом случае. Основа восстановления - архивная копия и журнал изменений базы данных.
</ul>
<p class="p">  Для восстановления сбоев 1 и 2 типов используется файл журнала, при жестком сбое (тип 3) – архивирование б/д.
<p class="p"><b>Файл журнала</b>
<p class="p">Для выполнения восстановления необходима дополнительная информация. В современных реляционных СУБД такая информация поддерживается в виде журнала изменений базы данных.
<p class="p">Общей целью журнализации изменений базы данных является обеспечение возможности восстановления согласованного состояния базы данных после любого сбоя. Поскольку основой поддержания целостного состояния  базы данных является механизм транзакций, журнализация и восстановление тесно связаны с понятием транзакции. <b>Общие принципы восстановления</b> следующие:
<ul>
<li><p class="q">результаты зафиксированных транзакций должны быть сохранены в восстановленном состоянии базы данных; 
<li><p class="q">результаты незафиксированных транзакций должны отсутствовать в восстановленном состоянии базы данных.
</ul>
<p class="p">В файл журнала может помещаться следующая информация: <b>записи о транзакциях</b> (идентификатор транзакции, тип записи журнала, идентификатор элемента данных, вовлеченного в операцию обработки базы данных, копию элемента данных до  и после операции) и ><b>записи о контрольных точках</b>. 
<p class="p">Основой восстановления является <b>избыточное хранение данных</b>; эти данные хранятся в журнале, содержащем последовательность записей об изменении базы данных. Возможно два варианта ведения журнальной информации:
<ul>
<p class="q"><b>1. </b> в первом варианте - для каждой транзакции поддерживается отдельный локальный журнал изменений базы данных этой транзакции и может поддерживаться в оперативной (виртуальной) памяти; кроме того, поддерживается общий журнал изменений базы данных. Этот вариант позволяет быстро выполнить индивидуальные откаты транзакций, однако приводит к значительному дублированию информации в локальных и общем журналах;
<p class="q"><b>2. </b>  Второй вариант - поддержание только общего журнала изменений базы данных, который и применяется выполнении индивидуальных откатов. Так как второй вариант применяется наиболее часто в СУБД, рассмотрим его более подробно.
</ul>
<p class="p"><b>Контрольные точки</b>
<p class="p"><p class="definition"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="info" class="svg-inline--fa fa-info fa-w-6 " role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 512"><path fill="currentColor" d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"></path></svg><b><u>Контрольная точка</u></b> – момент синхронизации между базой данных и файлом журнала, где регистрируются транзакции. Все буферы оперативной памяти принудительно записываются во вторичную память системы.</p>
<p class="p">Контрольные точки организуются через установленный временной интервал и включают выполнение следующих действий:
<ul>
<p class="q"><b> 1.</b><i>  запись всех имеющихся в оперативной памяти записей журнала во вторичную память;</i>
<p class="q"> <b>2.</b><i>  запись всех модифицированных блоков в буферах базы данных во вторичную память;</i>
<p class="q"> <b>3.</b><i>  помещение в файл журнала записи контрольной точки, которая содержит идентификаторы всех транзакций, которые были активны в момент создания этой контрольной точки.</i>
</ul>
<p class="p">

<!-- Online Test Pad Crossword Widget (#44255)-->
<div id="otp_wgt_cdyc74ufqlxnc"></div>
<script type="text/javascript">
    var otp_wjs_dt = (new Date).getTime();
    (function (w, d, n, s, rp) {
        w[n] = w[n] || [];
        rp = {};
        w[n].push(function () {
            otp_render_widget(d.getElementById("otp_wgt_cdyc74ufqlxnc"), 'onlinetestpad.com', 'cdyc74ufqlxnc', rp);
        }); 
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//onlinetestpad.com/js/widget.js?" + otp_wjs_dt;
        s.async = true;
        d.getElementsByTagName("head")[0].appendChild(s);
    })(this, this.document, "otp_widget_callbacks");
</script>





<div class="navbt">
	<div class=" btn red d">
		<a  href="9_Serialization_of_transactions.php" >Предыдущая 
			<div class="btn__blobs">
		      <div></div>
		      <div></div>
		      <div></div>
    		</div>
  		</a>
  	</div>
	<div class=" btn red d">
		<a href="11_Features_and_key_features_of_the_SQL_language.php">Следующая
			<div class="btn__blobs">
		      <div></div>
		      <div></div>
		      <div></div>
   			</div>
   		</a>
   	</div>
 </div>
</p>
</div>
</main>
 <script src="https://snipp.ru/cdn/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://snipp.ru/cdn/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://snipp.ru/cdn/fancybox/2.1.7/source/jquery.fancybox.pack.js"></script>
    <script src="js/registration.js"></script>
    <script src="js/user.js"></script>  
    <script src="js/topic.js"></script>
    