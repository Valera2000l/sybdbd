<meta name="viewport" content="width=device-width, initial-scale=1">

   <link rel="stylesheet" href="css/topic.css">

  <link rel="stylesheet" href="css/registration.css">
 <link href="https://fonts.googleapis.com/css?family=Roboto:400,700" rel="stylesheet">
 <link rel="shortcut icon" href="image/icon.png" type="image/x-icon"> 

   <title>Проектирование реляционных баз данных с использованием нормализации</title>


 	<header>
		<?php 
    include('nav.php');
    include('reg.php');
    include('cont.php');
    include('user.php');
    ?> 
	</header>
 	<main  class="m">
  <div  id="back" ><a href="topic.php" >     &lArr; Назад</a></div>

 <div class="page" id="page">
  <p class="p" ><b>РАЗДЕЛ 1. ОСНОВНЫЕ КОНЦЕПЦИИ ОРГАНИЗАЦИИ ДАННЫХ И РЕЛЯЦИОННАЯ МОДЕЛЬ ДАННЫХ</b>
  <p class="title">Тема 1.5. Проектирование реляционных баз данных с использованием нормализации</p>

<p class="definition"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="info" class="svg-inline--fa fa-info fa-w-6 " role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 512"><path fill="currentColor" d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"></path></svg><b><u>Нормализация</u></b>  представляет собой процесс приведения таблиц к виду, позволяющему осуществлять непротиворечивое и корректное редактирование данных.
<p class="definition"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="info" class="svg-inline--fa fa-info fa-w-6 " role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 512"><path fill="currentColor" d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"></path></svg><b><u>Нормальная форма </u></b>— свойство отношения в реляционной модели данных, характеризующее его с точки зрения избыточности, потенциально приводящей к логически ошибочным результатам выборки или изменения данных. Нормальная форма определяется как совокупность требований, которым должно удовлетворять отношение.
<p class="p">Процесс преобразования отношений <a href="glossary.php#bd" class="gl" title="Узнать значение">базы данных (БД) </a> к виду, отвечающему нормальным формам, называется нормализацией. Нормализация предназначена для приведения структуры БД к виду, обеспечивающему минимальную логическую избыточность, и не имеет целью уменьшение или увеличение производительности работы или же уменьшение или увеличение физического объёма базы данных. Конечной целью нормализации является уменьшение потенциальной противоречивости хранимой в базе данных информации.
<p class="p">Устранение избыточности производится, как правило, за счёт декомпозиции отношений таким образом, чтобы в каждом отношении хранились только первичные факты (то есть факты, не выводимые из других хранимых фактов).
	<p class="p">Основные свойства нормальных форм:
		<ul>
<li><p class="q">каждая следующая нормальная форма в некотором смысле лучше предыдущей;
	<li><p class="q">при переходе к следующей нормальной форме свойства предыдущих нормальных свойств сохраняются.
	</ul>

	<p class="p"><b>Первая нормальная форма (1NF) — базовая нормальная форма отношения в реляционной модели данных.</b>
<p class="definition"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="info" class="svg-inline--fa fa-info fa-w-6 " role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 512"><path fill="currentColor" d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"></path></svg>Переменная отношения находится в первой нормальной форме тогда и только тогда, когда в любом допустимом значении отношения каждый его кортеж содержит только одно значение для каждого из атрибутов.
<p class="p">В реляционной модели отношение всегда находится в первой нормальной форме по определению понятия отношение.
<p class="p">Что же касается различных таблиц, то они могут не быть правильными представлениями отношений и, соответственно, могут не находиться в 1NF. Таблица должна удовлетворять следующим пяти условиям:
<ul>
	<li><p class="q">Нет упорядочивания строк сверху-вниз (другими словами, порядок строк не несет в себе никакой информации).
<li><p class="q">Нет упорядочивания столбцов слева-направо (другими словами, порядок столбцов не несет в себе никакой информации).
<li><p class="q">Нет повторяющихся строк.
<li><p class="q">Каждое пересечение строки и столбца содержит ровно одно значение из соответствующего домена (и больше ничего).
<li><p class="q">Все столбцы являются обычными.
</ul>
<p class="p">«Обычность» всех столбцов таблицы означает, что в таблице нет «скрытых» компонентов, которые могут быть доступны только в вызове некоторого специального оператора взамен ссылок на имена регулярных столбцов, или которые приводят к побочным эффектам для строк или таблиц при вызове стандартных операторов. Таким образом, например, строки не имеют идентификаторов кроме обычных значений потенциальных ключей (без скрытых «идентификаторов строк» или «идентификаторов объектов»). Они также не имеют скрытых временных меток.
<p class="p"><b><i>Пример: </i></b>Исходная не нормализованная (то есть не являющаяся правильным представлением некоторого отношения) таблица:
<p class="p"><center><table>
	<thead>
		<tr><th><b>ФИО</b></th>
			<th><b>Данные</b></th>
		</tr>
	</thead>
	<tbody>
		<tr><td class="sql-code sql-code-line sql-code-line--blue-color ">Иванов Иван Иванович</td>
			<td>ПП-119 АСУ Муж. 19.01.1990</td></tr>
		<tr><td class="sql-code sql-code-line sql-code-line--blue-color ">Петров Петр Петрович</td>
			<td>Э-119 Электронщики Муж. 1991</td></tr>
		<tr><td class="sql-code sql-code-line sql-code-line--blue-color ">Васильева Катерина Ильинишна</td>
			<td>Прикладная Информатика 1990 Жен  ПК-129</td></tr>
	</tbody>
</table></center>
<p class="p">Таблица, приведенная к 1NF (являющаяся правильным представлением некоторого отношения):
<p class="p"><center><table>
	<thead>
		<tr><th><b>Фамилия</b></th>
			<th><b>Имя</b></th>
			<th><b>Отчество</b></th>
			<th><b>Пол</b></th>
			<th><b>Дата рождения</b></th>
			<th><b>Группа</b></th>
			<th><b>Специальность</b></th>
		</tr>
	</thead>
	<tbody>
		<tr><td >Иванов</td>
			<td>Иван</td>
			<td>Иванович</td>
			<td>Муж.</td>
			<td>19.01.1990</td>
			<td>ПП-119</td>
			<td>АСУ</td>
		</tr>
		<tr><td >Петров</td>
			<td>Петр</td>
			<td>Петрович</td>
			<td>Муж.</td>
			<td>20.03.1991</td>
			<td>Э-119</td>
			<td>Электронщики</td>
		</tr>
		<tr><td >Васильева</td>
			<td>Катерина</td>
			<td>Ильинишна</td>
			<td>Жен.</td>
			<td>17.04.1990</td>
			<td>ПК-129</td>
			<td>Прикладная Информатика</td>
		</tr>
	</tbody>
</table></center>



<p class="p"><b>Вторая нормальная форма (2NF) — одна из возможных нормальных форм таблицы реляционной базы данных.</b>
<p class="definition"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="info" class="svg-inline--fa fa-info fa-w-6 " role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 512"><path fill="currentColor" d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"></path></svg>Переменная отношения находится во второй нормальной форме тогда и только тогда, когда она находится в первой нормальной форме и каждый неключевой атрибут неприводимо зависит от ее потенциального ключа.
<p class="p">Неприводимость означает, что в составе потенциального ключа отсутствует меньшее подмножество атрибутов, от которого можно также вывести данную функциональную зависимость. Для неприводимой функциональной зависимости часто используется эквивалентое понятие «полная функциональная зависимость».
<p class="p">Если потенциальный ключ является простым, то есть состоит из единственного атрибута, то любая функциональная зависимость от него является неприводимой (полной). Если потенциальный ключ является составным, то согласно определению второй нормальной формы в отношении не должно быть неключевых атрибутов, зависящих от части составного потенциального ключа.
<p class="p">Вторая нормальная форма по определению запрещает наличие неключевых атрибутов, которые вообще не зависят от потенциального ключа. Таким образом, вторая нормальная форма запрещает создавать отношения как несвязанные (хаотические, случайные) наборы атрибутов.
<p class="p"><b><i>Пример: </i></b>Пример приведения отношения ко второй нормальной форме
<p class="p">Исходная таблица (1NF):

<p class="p"><center><table>
	<thead>
		<tr><th><b>Фамилия</b></th>
			<th><b>Имя</b></th>
			<th><b>Отчество</b></th>
			<th><b>Пол</b></th>
			<th><b>Дата рождения</b></th>
			<th><b>Группа</b></th>
			<th><b>Специальность</b></th>
		</tr>
	</thead>
	<tbody>
		<tr><td >Иванов</td>
			<td>Иван</td>
			<td>Иванович</td>
			<td>Муж.</td>
			<td>19.01.1990</td>
			<td>ПП-119</td>
			<td>АСУ</td>
		</tr>
		<tr><td >Петров</td>
			<td>Петр</td>
			<td>Петрович</td>
			<td>Муж.</td>
			<td>20.03.1991</td>
			<td>Э-119</td>
			<td>Электронщики</td>
		</tr>
		<tr><td >Васильева</td>
			<td>Катерина</td>
			<td>Ильинишна</td>
			<td>Жен.</td>
			<td>17.04.1990</td>
			<td>ПК-129</td>
			<td>Прикладная Информатика</td>
		</tr>
		<tr><td >Петров</td>
			<td>Илья</td>
			<td>Петрович</td>
			<td>Муж.</td>
			<td>20.05.1991</td>
			<td>Э-119</td>
			<td>Электронщики</td>
		</tr>
	</tbody>
</table></center>
<p class="p">Данные, находящиеся в столбцах «Группа» и «Специальность» могут повторяться в процессе заполнения много раз, что вызовет избыточность данных в таблице. Следовательно данную таблицу можно разделить на 3 сущности, имеющие отношения между собой.
<p class="p">В результате приведения к 2NF получаются три отношения:
<p class="p">Таблица с данными о студенте:
	<p class="p"><center><table>
	<thead>
		<tr><th><b>Фамилия</b></th>
			<th><b>Имя</b></th>
			<th><b>Отчество</b></th>
			<th><b>Пол</b></th>
			<th><b>Дата рождения</b></th>
		</tr>
	</thead>
	<tbody>
		<tr><td >Иванов</td>
			<td>Иван</td>
			<td>Иванович</td>
			<td>Муж.</td>
			<td>19.01.1990</td>
		</tr>
		<tr><td >Петров</td>
			<td>Петр</td>
			<td>Петрович</td>
			<td>Муж.</td>
			<td>20.03.1991</td>
		</tr>
		<tr><td >Васильева</td>
			<td>Катерина</td>
			<td>Ильинишна</td>
			<td>Жен.</td>
			<td>17.04.1990</td>
		</tr>
		<tr><td >Петров</td>
			<td>Илья</td>
			<td>Петрович</td>
			<td>Муж.</td>
			<td>20.05.1991</td>
		</tr>
	</tbody>
</table></center>
<p class="p">Список групп:
<p class="p"><div class="ttt"><table >
	<thead>
		<tr><th><b>Группа</b></th></tr>
	</thead>
	<tbody>
		<tr><td >ПП-119</td>	</tr>
		<tr><td >Э-119</td>	</tr>
		<tr><td >ПК-129</td>	</tr>
</tbody>
</table>
</div>
<p class="p">Список специальностей:
<p class="p "><div class="ttt"><table>
	<thead>
		<tr><th><b>Специальность</b></th></tr>
	</thead>
	<tbody>
		<tr><td >АСУ</td>	</tr>
		<tr><td >Электронщики</td>	</tr>
		<tr><td >Прикладная информатика</td>	</tr>
</tbody>
</table>
</div>



<p class="p"><b>Третья нормальная форма ( 3NF) — одна из возможных нормальных форм отношения реляционной базы данных. 3NF была изначально сформулирована Э. Ф. Коддом в 1971 году.</b>
<p class="definition"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="info" class="svg-inline--fa fa-info fa-w-6 " role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 512"><path fill="currentColor" d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"></path></svg>База данных будет находиться в третьей нормальной форме, если она приведена ко второй нормальной форме и каждый не ключевой столбец независим друг от друга. Если следовать процессу нормализации правильно до этой точки, с приведением к 3НФ может и не возникнуть вопросов. Следует знать, что 3НФ нарушается,  если изменив значение в одном столбце, потребуется изменение и в другом столбце.
<p class="p"><b><i>Пример: </i></b>Чтобы привести базу к третьей нормальной форме, надо:
	<p class="q">1. Определить, в каких полях каких таблиц имеется взаимозависимость. Как только что говорилось, поля, которые зависят больше друг от друга (студент от группы, а группа от специальности), чем от ряда в целом.
	<p class="q">2. Создайте соответствующие таблицы. Если есть проблемный столбец в шаге 1, создавайте раздельные таблицы для него.
	<p class="q">3. Создайте или выделите первичные ключи. Каждая таблица должна иметь первичный ключ. Для примера с клиентами это будут ID_Student, ID_gruppa, ID_Specialnost.
	<p class="q">4. Создайте необходимые внешние ключи, которые образуют любое из отношений. В нашем примере нужно добавить ID_gruppa в таблицу студентов и ID_Specialnost в таблицу групп.
<p class="p">В результате приведения к 3NF получаются три отношения:
	<p class="p">Таблица с данными о студенте:
<p class="p"><center><table>
	<thead>
		<tr>
			<th><b>ID_Student</b></th>
			<th><b>Фамилия</b></th>
			<th><b>Имя</b></th>
			<th><b>Отчество</b></th>
			<th><b>Пол</b></th>
			<th><b>Дата рождения</b></th>
			<th><b>ID_Gruppa</b></th>
			
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1</td>
			<td >Иванов</td>
			<td>Иван</td>
			<td>Иванович</td>
			<td>Муж.</td>
			<td>19.01.1990</td>
			<td>1</td>
			
		</tr>
		<tr><td>2</td>
			<td >Петров</td>
			<td>Петр</td>
			<td>Петрович</td>
			<td>Муж.</td>
			<td>20.03.1991</td>
			<td>2</td>
		</tr>
		<tr><td>3</td>
			<td >Васильева</td>
			<td>Катерина</td>
			<td>Ильинишна</td>
			<td>Жен.</td>
			<td>17.04.1990</td>
			<td>3</td>
		</tr>
		<tr><td>4</td>
			<td >Петров</td>
			<td>Илья</td>
			<td>Петрович</td>
			<td>Муж.</td>
			<td>20.05.1991</td>
			<td>4</td>
		</tr>
	</tbody>
</table></center>

<p class="p">Список групп:
<p class="p"><center><table>
	<thead>
		<tr>
			<th><b>ID_Gruppa</b></th>
			<th><b>Группа</b></th>
		    <th><b>ID_Specialnost</b></th>
	    </tr>
	</thead>
	<tbody>
		<tr><td>1</td>
			<td>ПП-119</td>
			<td>1</td>
		</tr>
		<tr><td >2</td>
			<td >Э-119</td>
			<td>2</td>	
		</tr>
		<tr><td>3</td>
			<td>ПП-119</td>
			<td>3</td>
		</tr>
		<tr><td >4</td>
			<td >Э-119</td>
			<td>2</td>	
		</tr>
</tbody>
</table></center>
<p class="p">Список специальностей:
<p class="p"><center><table>
	<thead>
		 <tr><th><b>ID_Specialnost</b></th>
		<th><b>Специальность</b></th></tr>
	</thead>
	<tbody>
		<tr><td>1</td>
			<td >АСУ</td>
		</tr>
		<tr><td >2</td>	
		<td >Электронщики</td>	
		</tr>

		<tr><td>3</td>
			<td >Прикладная информатика</td>
			</tr>
</tbody>
</table></center>
<p class="p">Существуют и другие нормальные формы с более строгими условиями:
<ul>
<li><p class="q">нормальная форма Бойса-Кодда (BCNF);
<li><p class="q">четвертая нормальная форма (4NF);
<li><p class="q">пятая нормальная форма, или нормальная форма проекции-соединения (5NF или PJ/NF).
</ul>
<p class="p"><!-- Online Test Pad Crossword Widget (#44251)-->
<div id="otp_wgt_cd2i76ftliggw"></div>
<script type="text/javascript">
    var otp_wjs_dt = (new Date).getTime();
    (function (w, d, n, s, rp) {
        w[n] = w[n] || [];
        rp = {};
        w[n].push(function () {
            otp_render_widget(d.getElementById("otp_wgt_cd2i76ftliggw"), 'onlinetestpad.com', 'cd2i76ftliggw', rp);
        }); 
        s = d.createElement("script");
        s.type = "text/javascript";
        s.src = "//onlinetestpad.com/js/widget.js?" + otp_wjs_dt;
        s.async = true;
        d.getElementsByTagName("head")[0].appendChild(s);
    })(this, this.document, "otp_widget_callbacks");
</script>
<div class="navbt">
	<div class=" btn red d">
		<a  href="5_Basic_tools_for_manipulating_relational_data.php" >Предыдущая 
			<div class="btn__blobs">
		      <div></div>
		      <div></div>
		      <div></div>
    		</div>
  		</a>
  	</div>
  
	<div class=" btn red d">
		<a href="7_The_structure_of_the_external_memory.php">Следующая
			<div class="btn__blobs">
		      <div></div>
		      <div></div>
		      <div></div>
   			</div>
   		</a>
   	</div>
 </div>
</p>
</div>
</main>
 <script src="https://snipp.ru/cdn/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://snipp.ru/cdn/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://snipp.ru/cdn/fancybox/2.1.7/source/jquery.fancybox.pack.js"></script>
    <script src="js/registration.js"></script>
    <script src="js/user.js"></script>  
    <script src="js/topic.js"></script>
    